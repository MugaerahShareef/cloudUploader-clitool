#!/bin/bash

check_file_access(){
    if ! [[ "$1" == /* ]] ; then
        path=.
    fi
    dirname "$1" | tr '/' $'\n' | while read part ; do
        path="$path/$part"
        # Check for execute permissions
        if ! [[ -x "$path" ]] ; then
            #echo "'$path' is blocking access." 
            #flag=1
            return 1
        fi
    done
    if ! [[ -r "$1" ]] ; then
        #echo "'$1' is not readable."
        #flag=2
        return 2
    fi
}

uploadfile(){
    resourceGroup="First"
    storageAccount="clouduploadercli"
    container="uploads"
    accountKey=$(az storage account keys list --resource-group $resourceGroup --account-name $storageAccount --query "[0].value" -o tsv)
    #check_blob
    flag=0
    blobs_json=$(az storage blob list --account-name $storageAccount --account-key $accountKey --container-name $container -o json)
    blob_names=($(echo $blobs_json | jq -r '.[].name'))
    for blob in "${blob_names[@]}"; do
        if [ "$blob" == "$1" ]; then
            echo "ERROR:A blob with the name $blob already exists in $container"
        flag=1
        break
        fi
    done
    if [ $flag -eq 0 ]; 
    then
        az storage blob upload-batch --pattern "$1" --source . --destination $container --account-key $accountKey --account-name $storageAccount > /dev/null 2>&1
        return 0
    fi
    return -1
}

file=$1
if [ -f $file ]
then
    #echo "$file exists"
    check_file_access $file
    res=$?
    if [[  res  -eq 1 ]];
    then
        echo"'$path' is blocking access."
    elif [[  res  -eq 2 ]];
    then
        echo "ERROR: $1 is not readable."
    else
        echo "uploading $file to uploads....."
        uploadfile $file
        temp=$?
        if [[ temp -eq 0 ]];
        then
            echo "File uploaded successfully :>"
        else
            echo "File upload unsuccessful :<"
        fi
    fi
else
    echo " ERROR: $file doesnot exists"
fi